#!/usr/bin/python
import sys
from jurtlib.command import JurtCommand, CliError

DESCR = """Builds a set of packages

Built packages will be added into a temporary repository so that they can
be used as build dependencies by those that are processed afterwards.

To list the targets, use jurt-list-targets.

To see the configuration used by jurt, use jurt-showrc.

Also, jurt-root-command should be able to use sudo for running commands as
root. Run jurt-test-sudo for checking whether it is properly configured.
"""

class Build(JurtCommand):

    usage = "%prog -t TARGET file.src.rpm..."
    descr = DESCR

    def init_parser(self, parser):
        JurtCommand.init_parser(self, parser)
        parser.add_option("-t", "--target", type="string",
                help="Target packages are built for")
        parser.add_option("-b", "--stop", default=None, metavar="STAGE",
                help="Stop at build stage STAGE and drops into a shell")
        parser.add_option("-l", "--showlog",
                action="store_true", default=False,
                help="Show the (also logged) output of build process")
        parser.add_option("-k", "--keeproot", default=False,
                action="store_true",
                help="Do not remove the root after build (useful to use "
                    "with -l)")
        parser.add_option("-d", "--duration", default=None, type="int",
                metavar="SECS",
                help=("Limit in seconds of build time (when exceeded the "
                     "build task is killed with SIGTERM)"))

    def run(self):
        if not self.args:
            raise CliError, "no source packages provided (--help?)"
        if self.opts.showlog:
            outputfile = sys.stdout
        else:
            outputfile = None
        self.jurt.build(self.args, self.opts.target,
                timeout=self.opts.duration, stage=self.opts.stop,
                outputfile=outputfile, keeproot=self.opts.keeproot)

Build().main()
